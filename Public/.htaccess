Options -MultiViews
RewriteEngine On

# Handle React Router - SPA routing
# If an existing asset or directory is requested go to it as it is
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# Ensure JSON files are served with correct MIME type and not rewritten
RewriteCond %{REQUEST_URI} \.json$
RewriteRule ^ - [L]

# If the requested resource doesn't exist, use index.html
RewriteRule ^ /index.html [L]

# Security Headers - Optimized for React Performance
<IfModule mod_headers.c>
    # Prevent clickjacking
    Header always append X-Frame-Options SAMEORIGIN
    
    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options nosniff
    
    # Enable XSS protection
    Header always set X-XSS-Protection "1; mode=block"
    
    # Referrer Policy - Balanced for performance and privacy
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Content Security Policy - Optimized for React + External Services
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.paypal.com https://www.paypalobjects.com https://checkout.paypal.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://api.paypal.com https://www.paypal.com https://*.paypal.com wss: ws:; frame-src 'self' https://www.paypal.com https://*.paypal.com https://checkout.paypal.com; media-src 'self' data: blob:; object-src 'none'; base-uri 'self'; form-action 'self' https://www.paypal.com;"
    
    # Additional security headers
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()"
    Header always set Cross-Origin-Embedder-Policy "unsafe-none"
    Header always set Cross-Origin-Opener-Policy "same-origin"
    Header always set Cross-Origin-Resource-Policy "cross-origin"
</IfModule>

# MIME Types - Ensure proper content types
<IfModule mod_mime.c>
    # JSON files
    AddType application/json .json
    
    # WebP images
    AddType image/webp .webp
    
    # Fonts
    AddType font/woff .woff
    AddType font/woff2 .woff2
    AddType font/ttf .ttf
    AddType font/otf .otf
    AddType application/font-woff .woff
    AddType application/font-woff2 .woff2
    AddType application/font-ttf .ttf
    AddType application/font-otf .otf
</IfModule>

# Compression - Optimized for React assets
<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE application/x-font
    AddOutputFilterByType DEFLATE application/x-font-opentype
    AddOutputFilterByType DEFLATE application/x-font-otf
    AddOutputFilterByType DEFLATE application/x-font-truetype
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE font/otf
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
    
    # Don't compress already compressed files
    SetEnvIfNoCase Request_URI \
        \.(?:gif|jpe?g|png|webp|zip|gz|bz2|sit|rar)$ no-gzip dont-vary
    SetEnvIfNoCase Request_URI \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
</IfModule>

# Browser Caching - Optimized for React SPA
<IfModule mod_expires.c>
    ExpiresActive on
    
    # Images - Longer cache for static images
    ExpiresByType image/jpg "access plus 3 months"
    ExpiresByType image/jpeg "access plus 3 months"
    ExpiresByType image/gif "access plus 3 months"
    ExpiresByType image/png "access plus 3 months"
    ExpiresByType image/svg+xml "access plus 3 months"
    ExpiresByType image/webp "access plus 3 months"
    ExpiresByType image/ico "access plus 3 months"
    
    # CSS and JavaScript - Versioned files can be cached longer
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType text/javascript "access plus 1 year"
    
    # Fonts - Very long cache
    ExpiresByType font/ttf "access plus 1 year"
    ExpiresByType font/otf "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # JSON files - Short cache for dynamic content
    ExpiresByType application/json "access plus 1 hour"
    
    # HTML - Short cache for SPA
    ExpiresByType text/html "access plus 1 hour"
</IfModule>

# Cache Control Headers - Fine-tuned for React
<IfModule mod_headers.c>
    # Cache static assets with versioning
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|webp)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    # Cache JSON files briefly
    <FilesMatch "\.json$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
    
    # Don't cache HTML files - SPA needs fresh HTML
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires 0
    </FilesMatch>
    
    # Preload critical resources
    <FilesMatch "index\.html$">
        Header add Link "</Assets/index-BqPwuzKZ.css>; rel=preload; as=style"
        Header add Link "</Assets/index-B4ibvzh_.js>; rel=preload; as=script"
    </FilesMatch>
</IfModule>

# Performance optimizations
<IfModule mod_headers.c>
    # Enable HTTP/2 Server Push for critical resources
    Header add Link "</Assets/index-BqPwuzKZ.css>; rel=preload; as=style"
    Header add Link "</Assets/index-B4ibvzh_.js>; rel=preload; as=script"
    
    # Remove server signature
    Header unset Server
    Header unset X-Powered-By
</IfModule>

# Security - Additional protections
<IfModule mod_headers.c>
    # Prevent information disclosure
    Header unset X-Powered-By
    Header unset Server
    
    # HSTS for HTTPS (uncomment if using HTTPS)
    # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>